const tracking_token="MIXPANEL_TOKEN_HERE",install_url="URL_TO_OPEN_ON_INSTALL",uninstall_url="URL_TO_OPEN_ON_UNINSTALL",config_url="URL_WITH_CONFIG";async function fetchTimeout(a,b={},c=5e3){let d=new AbortController,e=setTimeout(()=>d.abort(),c);return await fetch(a,Object.assign({signal:d.signal},b))}async function track(a,b){try{function c(){let a="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789",b="";for(;24>b.length;)b+=a.charAt(Math.random()*a.length);return b}let d=await chrome.storage.sync.get(null),e=d.user_id;e||(e=c(),await chrome.storage.sync.set({user_id:e}));let f=Object.assign(Object.assign({},b),{time:0|Date.now()/1e3,distinct_id:e,$insert_id:c(),token:"MIXPANEL_TOKEN_HERE"}),g=d&&d.analytics;return g?await fetchTimeout("https://api.mixpanel.com/track",{method:"POST",headers:{Accept:"text/plain","Content-Type":"application/x-www-form-urlencoded"},body:new URLSearchParams({data:JSON.stringify({event:a,properties:f}),verbose:1},2e3)}).then(a=>a.json()):void 0}catch{}}async function generateConfig(a){let b=await fetchTimeout(config_url);return b?(b=b.json(),chrome.storage.local.set({defaultConfig:b})):b=(await chrome.storage.local.get(null)).defaultConfig,Object.assign(b,a)}chrome.runtime.onInstalled.addListener(async function(a){if("install"==a.reason){chrome.tabs.create({url:install_url});chrome.runtime.setUninstallURL&&chrome.runtime.setUninstallURL(uninstall_url)}}),chrome.runtime.onMessageExternal.addListener(async(a,b,c)=>{try{if("GET_DATA"==a.type){let a=await chrome.storage.local.get(null),b=await chrome.storage.sync.get(null);track("settings_open",{local_storage:a,sync_storage:b}).catch(()=>{}),c({success:!0,settings:await generateConfig(a)})}else if("SET_DATA"==a.type){let b=await chrome.storage.local.get(null),d=await chrome.storage.sync.get(null);await chrome.storage.sync.set(await generateConfig(Object.assign(d,a.settings))),track("settings_change",{local_storage:b,sync_storage:d}).catch(()=>{}),c({success:!0})}if("RESET_DATA"==a.type){let a=await chrome.storage.local.get(null),b=await chrome.storage.sync.get(null);await chrome.storage.local.clear(),await chrome.storage.sync.clear(),track("settings_clear",{local_storage:a,sync_storage:b}).catch(()=>{}),c({success:!0})}}catch(a){track("error_detected",{location:"js.background.js-chrome.runtime.onMessageExternal",error_msg:a.toString(),error_stack:a.stack}).catch(()=>{})}});